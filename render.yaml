services:
  # Service 1: PostgreSQL Database
  - name: gym-database
    type: pserv
    runtime: postgres
    plan: free
    startCommand: "" # required, even if blank for postgres

  # Service 2: Spring Boot Backend
  - name: gym-backend
    type: web
    runtime: docker # or use buildCommand if not dockerizing
    rootDir: gymmanagement
    plan: free
    buildCommand: ./mvnw clean install -DskipTests
    startCommand: java -jar target/gymmanagement-0.0.1-SNAPSHOT.jar
    healthCheckPath: /actuator/health
    envVars:
      - key: DB_URL
        fromDatabase:
          name: gym-database
          property: connectionString
      - key: DB_USER
        fromDatabase:
          name: gym-database
          property: user
      - key: DB_PASSWORD
        fromDatabase:
          name: gym-database
          property: password
      - key: SECRET_TOKEN_KEY
        sync: false
      - key: MAIL_USERNAME
        sync: false
      - key: MAIL_PASSWORD
        sync: false

  # Service 3: React Frontend as Node Web (for dynamic pricing)
  - name: gym-frontend
    type: web
    runtime: node
    rootDir: react-app-gym
    plan: free
    buildCommand: npm install && npm run build
    startCommand: npx serve -s dist
    envVars:
      - key: VITE_API_URL
        fromService:
          type: web
          name: gym-backend
          property: hostport
